{
  "swagger": "2.0",
  "info": {
    "description": "",
    "title": "Mars receipt",
    "contact": {
      "name": "mars"
    },
    "version": "v1"
  },
  "basePath": "/api/receipt/v1",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/receipts_extract": {
      "post": {
        "summary": "Receipt extract",
        "operationId": "receipts_extract",
        "parameters": [
          {
            "in": "header",
            "name":"Access-Control-Allow-Origin",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReceiptExtractRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "$ref": "#/definitions/ReceiptExtractResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin":{
                "description": "cors",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "invalid argument",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "internal",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/receipts_report":{
      "post": {
        "summary": "Receipt report",
        "operationId": "receipts_report",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReceiptReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "400": {
            "description": "invalid arguments"
          }
        }
      }
    }
  },
  "definitions": {
    "ReceiptExtractRequest": {
      "id": "ReceiptExtractRequest",
      "description": "",
      "type": "object",
      "properties": {
        "image": {
          "description": "The image to be processed.",
          "$ref": "#/definitions/Image"
        }
      },
      "required": [
        "image"
      ]
    },
    "ReceiptExtractResponse": {
      "id": "ReceiptExtractResponse",
      "description": "",
      "type": "object",
      "properties": {
        "fullTextAnnotation": {
          "description": "Text annotation",
          "$ref": "#/definitions/TextAnnotation"
        },
        "receiptInfo":{
          "description": "Receipt info",
          "$ref": "#/definitions/ReceiptInfo"
        }
      },
      "required": [
        "fullTextAnnotation",
        "receiptInfo"
      ]
    },
    "ReceiptReportRequest":{
      "id":"ReceiptReportRequest",
      "description": "",
      "type": "object",
      "properties": {
        "image": {
          "description": "The image",
          "$ref": "#/definitions/Image"
        },
        "fullTextAnnotation": {
          "description": "Text annotation",
          "$ref": "#/definitions/TextAnnotation"
        },
        "receiptInfo":{
          "description": "Receipt info",
          "$ref": "#/definitions/ReceiptInfo"
        }
      },
      "required": [
        "image",
        "fullTextAnnotation",
        "receiptInfo"
      ]
    },
    "ReceiptInfo":{
      "id":"ReceiptInfo",
      "description": "Receipt info",
      "type": "object",
      "properties": {
        "lang":{
          "description": "Receipt lang",
          "type": "string"
        },
        "title":{
          "description": "Receipt title",
          "type": "string"
        },
        "totalPrice":{
          "description": "TotalPrice",
          "type":"string",
          "format": "double"
        },
        "fullText":{
          "description": "Full text",
          "type": "string"
        }
      }
    },
    "Block": {
      "id": "Block",
      "description": "Logical element on the page.",
      "type": "object",
      "properties": {
        "blockType": {
          "description": "Detected block type (text, image etc) for this block.",
          "type": "string"
        },
        "boundingBox": {
          "description": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3).",
          "$ref": "#/definitions/BoundingPoly"
        },
        "paragraphs": {
          "description": "List of paragraphs in this block (if this blocks is of type text).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Paragraph"
          }
        },
        "property": {
          "description": "Additional information detected for the block.",
          "$ref": "#/definitions/TextProperty"
        }
      }
    },
    "BoundingPoly": {
      "id": "BoundingPoly",
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vertex"
          }
        }
      }
    },
    "DetectedBreak": {
      "id": "DetectedBreak",
      "description": "Detected start or end of a structural component.",
      "type": "object",
      "properties": {
        "isPrefix": {
          "description": "True if break prepends the element.",
          "type": "boolean"
        },
        "type": {
          "description": "Detected break type.",
          "type": "string"
        }
      }
    },
    "DetectedLanguage": {
      "id": "DetectedLanguage",
      "description": "Detected language for a structural component.",
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "type": "number",
          "format": "double"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      }
    },
    "Image": {
      "id": "Image",
      "description": "Client image to perform Google Cloud Vision API tasks over.",
      "type": "object",
      "properties": {
        "contentBase64": {
          "description": "Image content, represented as a stream of bytes.\nNote: as with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.",
          "type": "string"
        }
      },
      "required": [
        "contentBase64"
      ]
    },
    "Page": {
      "id": "Page",
      "description": "Detected page from OCR.",
      "type": "object",
      "properties": {
        "blocks": {
          "description": "List of blocks of text, images etc on this page.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Block"
          }
        },
        "height": {
          "description": "Page height in pixels.",
          "type": "integer",
          "format": "int64"
        },
        "property": {
          "description": "Additional information detected on the page.",
          "$ref": "#/definitions/TextProperty"
        },
        "width": {
          "description": "Page width in pixels.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Paragraph": {
      "id": "Paragraph",
      "description": "Structural unit of text representing a number of words in certain order.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3).",
          "$ref": "#/definitions/BoundingPoly"
        },
        "property": {
          "description": "Additional information detected for the paragraph.",
          "$ref": "#/definitions/TextProperty"
        },
        "words": {
          "description": "List of words in this paragraph.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Word"
          }
        }
      }
    },
    "Symbol": {
      "id": "Symbol",
      "description": "A single symbol representation.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3).",
          "$ref": "#/definitions/BoundingPoly"
        },
        "property": {
          "description": "Additional information detected for the symbol.",
          "$ref": "#/definitions/TextProperty"
        },
        "text": {
          "description": "The actual UTF-8 representation of the symbol.",
          "type": "string"
        }
      }
    },
    "TextAnnotation": {
      "id": "TextAnnotation",
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please\nrefer to the google.cloud.vision.v1.TextAnnotation.TextProperty message\ndefinition below for more detail.",
      "type": "object",
      "properties": {
        "pages": {
          "description": "List of pages detected by OCR.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Page"
          }
        },
        "text": {
          "description": "UTF-8 text detected on the pages.",
          "type": "string"
        }
      }
    },
    "TextProperty": {
      "id": "TextProperty",
      "description": "Additional information detected on the structural component.",
      "type": "object",
      "properties": {
        "detectedBreak": {
          "description": "Detected start or end of a text segment.",
          "$ref": "#/definitions/DetectedBreak"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectedLanguage"
          }
        }
      }
    },
    "Vertex": {
      "id": "Vertex",
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "type": "integer",
          "format": "int64"
        },
        "y": {
          "description": "Y coordinate.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Word": {
      "id": "Word",
      "description": "A word representation.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3).",
          "$ref": "#/definitions/BoundingPoly"
        },
        "property": {
          "description": "Additional information detected for the word.",
          "$ref": "#/definitions/TextProperty"
        },
        "symbols": {
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Symbol"
          }
        }
      }
    }
  }
}