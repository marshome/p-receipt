// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReceiptsReportReader is a Reader for the ReceiptsReport structure.
type ReceiptsReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReceiptsReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReceiptsReportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewReceiptsReportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReceiptsReportOK creates a ReceiptsReportOK with default headers values
func NewReceiptsReportOK() *ReceiptsReportOK {
	return &ReceiptsReportOK{}
}

/*ReceiptsReportOK handles this case with default header values.

ok
*/
type ReceiptsReportOK struct {
}

func (o *ReceiptsReportOK) Error() string {
	return fmt.Sprintf("[POST /receipts_report][%d] receiptsReportOK ", 200)
}

func (o *ReceiptsReportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReceiptsReportBadRequest creates a ReceiptsReportBadRequest with default headers values
func NewReceiptsReportBadRequest() *ReceiptsReportBadRequest {
	return &ReceiptsReportBadRequest{}
}

/*ReceiptsReportBadRequest handles this case with default header values.

invalid arguments
*/
type ReceiptsReportBadRequest struct {
}

func (o *ReceiptsReportBadRequest) Error() string {
	return fmt.Sprintf("[POST /receipts_report][%d] receiptsReportBadRequest ", 400)
}

func (o *ReceiptsReportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
