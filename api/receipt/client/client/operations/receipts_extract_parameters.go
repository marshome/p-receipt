// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/marshome/p-receipt/api/receipt/client/models"
)

// NewReceiptsExtractParams creates a new ReceiptsExtractParams object
// with the default values initialized.
func NewReceiptsExtractParams() *ReceiptsExtractParams {
	var ()
	return &ReceiptsExtractParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewReceiptsExtractParamsWithTimeout creates a new ReceiptsExtractParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewReceiptsExtractParamsWithTimeout(timeout time.Duration) *ReceiptsExtractParams {
	var ()
	return &ReceiptsExtractParams{

		timeout: timeout,
	}
}

// NewReceiptsExtractParamsWithContext creates a new ReceiptsExtractParams object
// with the default values initialized, and the ability to set a context for a request
func NewReceiptsExtractParamsWithContext(ctx context.Context) *ReceiptsExtractParams {
	var ()
	return &ReceiptsExtractParams{

		Context: ctx,
	}
}

// NewReceiptsExtractParamsWithHTTPClient creates a new ReceiptsExtractParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewReceiptsExtractParamsWithHTTPClient(client *http.Client) *ReceiptsExtractParams {
	var ()
	return &ReceiptsExtractParams{
		HTTPClient: client,
	}
}

/*ReceiptsExtractParams contains all the parameters to send to the API endpoint
for the receipts extract operation typically these are written to a http.Request
*/
type ReceiptsExtractParams struct {

	/*AccessControlAllowOrigin*/
	AccessControlAllowOrigin *string
	/*Body
	  Request

	*/
	Body *models.ReceiptExtractRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the receipts extract params
func (o *ReceiptsExtractParams) WithTimeout(timeout time.Duration) *ReceiptsExtractParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the receipts extract params
func (o *ReceiptsExtractParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the receipts extract params
func (o *ReceiptsExtractParams) WithContext(ctx context.Context) *ReceiptsExtractParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the receipts extract params
func (o *ReceiptsExtractParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the receipts extract params
func (o *ReceiptsExtractParams) WithHTTPClient(client *http.Client) *ReceiptsExtractParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the receipts extract params
func (o *ReceiptsExtractParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessControlAllowOrigin adds the accessControlAllowOrigin to the receipts extract params
func (o *ReceiptsExtractParams) WithAccessControlAllowOrigin(accessControlAllowOrigin *string) *ReceiptsExtractParams {
	o.SetAccessControlAllowOrigin(accessControlAllowOrigin)
	return o
}

// SetAccessControlAllowOrigin adds the accessControlAllowOrigin to the receipts extract params
func (o *ReceiptsExtractParams) SetAccessControlAllowOrigin(accessControlAllowOrigin *string) {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
}

// WithBody adds the body to the receipts extract params
func (o *ReceiptsExtractParams) WithBody(body *models.ReceiptExtractRequest) *ReceiptsExtractParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the receipts extract params
func (o *ReceiptsExtractParams) SetBody(body *models.ReceiptExtractRequest) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *ReceiptsExtractParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccessControlAllowOrigin != nil {

		// header param Access-Control-Allow-Origin
		if err := r.SetHeaderParam("Access-Control-Allow-Origin", *o.AccessControlAllowOrigin); err != nil {
			return err
		}

	}

	if o.Body == nil {
		o.Body = new(models.ReceiptExtractRequest)
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
